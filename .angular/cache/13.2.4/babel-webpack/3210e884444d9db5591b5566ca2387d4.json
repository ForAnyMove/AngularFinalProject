{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, text/plain, */*'\n  })\n};\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getGames() {\n      console.log(this);\n      console.dir(this);\n      return this.http.get('/api/games', httpOptions);\n    }\n\n    addGame(gameId) {\n      return this.http.patch('/api/games/addGame', {\n        gameId\n      }, httpOptions);\n    }\n\n    findGames(searchParam) {\n      return this.http.get('/api/games/findGames', {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json, text/plain, */*'\n        }),\n        params: {\n          'searchParam': searchParam\n        }\n      });\n    }\n\n    getLibrary() {\n      return this.http.get('/api/games/library', httpOptions);\n    }\n\n    getFriends() {\n      return this.http.get('/api/users', httpOptions);\n    }\n\n    getProfile() {\n      return this.http.get('/api/users/me', httpOptions);\n    }\n\n    findFriends(searchParam) {\n      return this.http.get('/api/users/findUsers', {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json, text/plain, */*'\n        }),\n        params: {\n          'searchParam': searchParam\n        }\n      });\n    }\n\n    addFriend(friendId) {\n      return this.http.patch('/api/users/me/addFriend', {\n        friendId\n      }, httpOptions);\n    }\n\n    removeFriend(friendId) {\n      return this.http.patch('/api/users/me/removeFriend', {\n        friendId\n      }, httpOptions);\n    }\n\n    updateProfile(username, email, age) {\n      return this.http.patch('/api/users/me', {\n        username,\n        email,\n        age\n      }, httpOptions);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}